%YAML 1.2
---
file_extensions:
  - zig
scope: source.zig

contexts:
  main:
    - include: storage
    - include: structure
    - include: statement
    - include: conditional
    - include: repeat
    - include: constant
    - include: keyword
    - include: type
    - include: boolean
    - include: operator
    - include: dec-number
    - include: float-number
    - include: hex-number
    - include: oct-number
    - include: bin-number
    - include: character
    - include: operators
    - include: comment-line
    - include: comment-line-doc
    - include: strings

  storage:
    - match: '\b(const|var|extern|packed|export|pub|noalias|inline|comptime|nakedcc|coldcc|stdcallcc|volatile|align|section)\b'
      scope: storage.zig

  structure:
    - match: 'union'
      scope: entity.name.union.zig
    - match: 'struct'
      scope: entity.name.struct.zig
    - match: 'enum'
      scope: entity.name.enum.zig

  statement:
    - match: '\b(break|return|continue|asm|defer|unreachable)\b'
      scope: keyword.control.zig

  conditional:
    - match: '\b(if|else|switch|and|or)\b'
      scope: keyword.control.conditional.zig

  repeat:
    - match: '\b(while|for)\b'
      scope: keyword.control.zig

  constant:
    - match: '\b(null|undefined|this)\b'
      scope: constant.language.zig

  keyword:
    - match: '\b(fn|use|test)\b'
      scope: entity.name.function.zig

  type:
    - match: '\b(bool|f32|f64|f128|void|noreturn|type|error|i2|u2|i3|u3|i4|u4|i5|u5|i6|u6|i7|u7|i8|u8|i16|u16|u29|i29|i32|u32|i64|u64|i128|u128|isize|usize|c_short|c_ushort|c_int|c_uint|c_long|c_ulong|c_longlong|c_ulonglong|c_longdouble|c_void)\b'
      scope: storage.type.zig

  boolean:
    - match: '\b(true|false)\b'

  operators:
    - match: '(==|!=)'
      scope: keyword.operator.zig
    - match: '\b(and|or)\b'
      scope: keyword.operator.word.zig
    - match: '(-%?|\\+%?|\\*%?|/[^/]|%)=?'
      scope: keyword.operator.arithmetic.zig
    - match: '(<<%?|>>|!|&|\\^|\\|)=?'
      scope: keyword.operator.bitwise.zig
    - match: '(==|\+\+|\*\*|->)'
      scope: keyword.operator.special.zig

  dec-number:
    - match: '\b-?\d*\b'
      scope: constant.numeric.integer

  # float-number:
  #   # - match: '\b\d+.\d+\b'
  #   - match: '^(?!-0$)[+-]?([1-9]\d*|0)(\.\d+)?$'
  #     # scope: constant.numeric.float
  #     scope: invalid

  hex-number:
    - match: '\b0x[a-fA-F0-9]+\b'
      scope: constant.numeric.hex

  oct-number:
    - match: '\b0o[0-7]+\b'
      scope: constant.numeric.octal

  bin-number:
    - match: '0b[01]+'

  # character-invalid:
    # -match: /b\?'\zs[\n\r\t']\ze'/


  # character-invalid-unicode:
  #   -match: /b'\zs[^[:cntrl:][:graph:][:alnum:][:space:]]\ze'/

  # character:
    # -match: /b'\([^\\]\|\\\(.\|x\x\{2}\)\)'/
    # -contains: zigEscape,zigEscapeError,zigCharacterInvalid,zigCharacterInvalidUnicode
    # -match: /'\([^\\]\|\\\(.\|x\x\{2}\|u\x\{4}\|U\x\{6}\)\)'/
    # -contains:zigEscape,zigEscapeUnicode,zigEscapeError,zigCharacterInvalid
    #

  comment-line:
    - match: "\/\/[^/]"
      scope: punctuation.definition.comment.zig
      push:
        - include: todo
        - meta_scope: comment.line.documentation.zig
        - match: $\n?
          pop: true


  comment-line-doc:
    - match: "\/\/\/"
      scope: invalid
      push:
        - include: todo
        - meta_scope: invalid
        - match: $\n?
          pop: true

  # see: https://forum.sublimetext.com/t/todo-syntax-highlighting/27604/11
  todo:
    - match: "TODO"
      scope: comment.line.todo.zig

  strings:
    - match: '(c"|")'
      scope: string.quoted.double
      push: inside_string

  inside_string:
    - meta_include_prototype: false
    - meta_scope: string.quoted.double.zig
    - match: '(\\.)'
      scope: constant.character.escape.zig
    - match: '"'
      scope: string.quoted.double.zig
      pop: true


# syn match     zigEscapeError   display contained /\\./
# syn match     zigEscape        display contained /\\\([nrt\\'"]\|x\x\{2}\)/
# syn match     zigEscapeUnicode display contained /\\\(u\x\{4}\|U\x\{6}\)/
# syn region    zigString      start=+c\?"+ skip=+\\\\\|\\"+ end=+"+ oneline contains=zigEscape,zigEscapeUnicode,zigEscapeError,@Spell

# // ----------------------------------

  # numbers:
  #   - match: '\b(-)?[0-9.]+\b'
  #     scope: constant.numeric.example-c


